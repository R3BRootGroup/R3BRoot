C	
C	
C	                  NORMOD 1998
C       
C	
C
C       PROGRAM TO CALCULATE SCHEMATIC COLLECTIVE WAVE FUNCTION OF
C       R**(L+M)*YL OR R**(L+M)*[SIGMA*YL]. 
C
        DIMENSION FNP(100),FLP(100),F2JP(100),U2(100),FNH(100),FLH(100)
     1  ,F2JH(100),V2(100),CPH1(100,100),CPH2(100,100),CPH3(100,100),
     1  CPH4(100,100),NPTYPE(100),NHTYPE(100),NPFLAG(100),NHFLAG(100)
     1  ,ISHELP(100),ISHELH(100)
C	
C	CARD 1: IRCONV = 0 FOR DW81, =1 FOR DWBA91
C	SINGLE PARTICLE RADIAL WAVE FUNCTIONS ARE DEFINED TO BE POSITIVE
C	TOWARDS INFINITY IN DW81. IN DWBA91 THEY ARE DEFINED TO BE POSITIVE 
C	NEAR THE ORIGIN. 
C	
C	
C
	READ(5,*) IRCONV
C
C       CARD 2: NUMP= NUMBER OR PARTICLE SHELLS
C
        READ(5,*) NUMP
        DO 10 I=1,NUMP
C
C	CARDS 3: ( x NUMP)
C       FNP = NUMBER OF NODES IN PATICLE RADIAL WAVEF.
C       FLP = ANGULAR MOMENTUM OF PARTICLE 
C       F2JP = TWICE TOTAL ANG. MOM. OF PARTICLE 
C       U2= EMPTINESS OF PARTICLE-SHELL. 
C	NPTYPE=0 FOR NEUTRON, 1 FOR PROTON
C	NPFLAG = MAJOR SHELL NUMBER OF PARTICLE
C	ISHELP = NUMBER OF THE SHELL, USED TO WRITE THE WAVE FUNCTION
C	TO DEVICES # 7-10, IN THE FORMAT : ISHELP, ISHELH, COEFF
C
        READ(5,*) FNP(I),FLP(I),F2JP(I),U2(I),NPTYPE(I),NPFLAG(I)
     1  ,ISHELP(I)
10	CONTINUE
C
C       CARD 4: NUMH= NUMBER OR HOLE SHELLS
C
        READ(5,*) NUMH
        DO 20 I=1,NUMH
C
C	CARDS 5: ( x NUMH)
C       FNH= NUMBER OF NODES IN HOLE RADIAL WAVEF.
C       FLH= ANGULAR MOMENTUM OF HOLE 
C       F2JP(H)= TWICE TOTAL ANG. MOM. OF HOLE 
C       V2= FULLNESS OF THE HOLE -SHELL. 
C	NHTYPE=0 FOR NEUTRON, 1 FOR PROTON
C	NHFLAG = MAJOR SHELL NUMBER OF PARTICLE
C	ISHELH = NUMBER OF THE SHELL, USED TO WRITE THE WAVE FUNCTION
C	TO DEVICES # 7-10, IN THE FORMAT : ISHELP, ISHELH, COEFF
C
        READ(5,*) FNH(I),FLH(I),F2JH(I),V2(I),NHTYPE(I),NHFLAG(I)
     1  ,ISHELH(I)
20	CONTINUE

C
C	CARDS 6: CHARACTERISTICS AND RESTRICTIONS 
C	OF THE TRANSFER OPERATOR (READS CASES UNTIL EOF)
C	
C       M= EXPONENT OF R IS (L+M), WHERE L=JTRAN FOR NATURAL PARITY
C	AND L=JTRAN-1 OR L=JTRAN+1 FOR UNNATURAL PARITY TRANSITIONS
C	JTRAN= TRANSFERRED TOTAL ANG. MOM.
C       PARITY= PRODUCT OF PARITIES OF INITIAL AND FINAL STATE
C	AMASS = MASS OF TARGET,
C	ISPIN = ISOSPIN TRANSFER, ISPIN3 =3-COMPONENT OF ISPIN
C	REACTION: TYPE              ISPIN    ISPIN3
C	          (P,P) T=0            0        0
C	          (P,P) T=1            1        0
C                 (P,N)                1        1
C	          (N,P)                1        -1
C	IDIFL= MINIMUM DIFFERENCE BETWEEN MAJOR SHELL NUMBERS
C	IDIFH= MAXIMUM DIFFERENCE BETWEEN MAJOR SHELL NUMBERS
C
25      READ(5,*,END=301) M,JTRAN,PARITY,AMASS,ISPIN,ISPIN3,
     $	IDIFL,IDIFH
        BOSC=AMASS**(1./6.)
        NPA=PARITY
	NPA1=(1-NPA)/2
        NMASS=AMASS
        WRITE(6,100) M,JTRAN,NPA,ISPIN,ISPIN3,NMASS,IDIFL,IDIFH
        WRITE(6,110)
        JMIN1=JTRAN-1
        JPLUS1=JTRAN+1
        WRITE(6,111)JTRAN,JMIN1,JTRAN,JPLUS1
        WRITE(6,110)
        HV1=0.
        HV2=0.
        HV3=0.
        HV4=0.
	HV5=0.
	HV6=0.
	HV7=0.
	HV8=0.
	HV1P=0.
	HV2P=0.
	HV3P=0.
	HV4P=0.
	HV11=0.
	HV22=0.
	HV33=0.
	HV44=0.
	HV13=0.
        HV24=0.
	HV15=0.
	HV26=0.
	HV37=0.
	HV48=0.
C
C	CALCULATE UNNORMALIZED WAVE FUNCTIONS
C
	DO 30 IP=1,NUMP
	DO 40 IH=1,NUMH
C	LIMIT THE EXCITATION TO IDIFL TILL IDIFH HBAR.OMEGA
	NPFL=NPFLAG(IP)
	NHFL=NHFLAG(IH)
	NDIF=ABS(NPFL-NHFL)
	IF (NDIF.GT.IDIFH.OR.NDIF.LT.IDIFL) GOTO 40
C	CHECK IF PARTICLE AND HOLE MATCH THE REACTION TYPE
C	IN THE FOLLOWING THE QUANTITY NPTYPE(IP)-NHTYPE(IH)
C	SHOULD BE EQUAL TO 0 FOR (P,P) TYPE REACTIONS, -1 FOR
C	(N,P) TYPE REACTIONS AND +1 FOR (P,N) TYPE REACTIONS.
	NPH=NPTYPE(IP)-NHTYPE(IH)
	IF(NPH.NE.ISPIN3) GOTO 40
        N2=FNP(IP)
        N1=FNH(IH)
        FL2=FLP(IP)
        L2=FL2
        FL1=FLH(IH)
        L1=FL1
        FJ2=0.5*F2JP(IP)
        FJ1=0.5*F2JH(IH)
        U=SQRT(U2(IP))
        V=SQRT(V2(IH))
C
C	CHECK IF MATRIX ELEMENT IS ZERO
C

	LTEMP=L1+L2+NPA1
	IF(TR(FJ1,FJ2,FLOAT(JTRAN)).LT.0..OR.PAR(LTEMP).LT.0.) GOTO 40
C
        JPA=PAR(JTRAN)
C
C       CALCULATE REDUCED M.E. FOR YLM AND SIGMA*YLM
C
	LAMB1=JTRAN
	LAMB2=JTRAN-1
	LAMB3=JTRAN
	LAMB4=JTRAN+1
	LM1=LAMB1+M
	LM2=LAMB2+M
	LM3=LAMB3+M
	LM4=LAMB4+M
        IF (NPA.EQ.JPA) THEN
          TEMP1=YBAR(FL2,FJ2,FL1,FJ1,LAMB1)
          TEMP2=0.
          TEMP3=SYBAR(FL2,FJ2,FL1,FJ1,LAMB3,JTRAN)
          TEMP4=0.
C
C         RADME CALCULATES RADIAL INTEGRAL OF THE MATRIX-ELEMENT
C
          RAD1=RADME(N2,L2,N1,L1,LM1)
	  RAD2=0.
	  RAD3=RAD1
	  RAD4=0.
	ELSE
          TEMP1=0.
	  RAD1=0.
        IF (LM2.LT.0) THEN
            TEMP2=0.
	    RAD2=0.
        ELSE
            TEMP2=SYBAR(FL2,FJ2,FL1,FJ1,LAMB2,JTRAN)
            RAD2=RADME(N2,L2,N1,L1,LM2)
        ENDIF
          TEMP3=0.
	  RAD3=0.
	IF (LM4.LT.0) THEN
	     TEMP4=0.
	     RAD4=0.
	ELSE
            TEMP4=SYBAR(FL2,FJ2,FL1,FJ1,LAMB4,JTRAN)
            RAD4=RADME(N2,L2,N1,L1,LM4)
	ENDIF
        ENDIF
C
C       FULL M.E. WITH PHASE ADDED FOR RADIAL WAVEF. 
C       ACCORDING TO DW81 OR DWBA91 CONVENTION
C
	PROT=1.
	IF(NPTYPE(IP).EQ.1.AND.ISPIN.EQ.1)PROT=-1.
	CHARG=NPTYPE(IP)
	PHASE=PAR(N1+N2)
	IF(IRCONV.NE.0) PHASE=1.
        CTMP1=PHASE*RAD1*TEMP1*PROT
        CTMP2=PHASE*RAD2*TEMP2*PROT
        CTMP3=PHASE*RAD3*TEMP3*PROT
        CTMP4=PHASE*RAD4*TEMP4*PROT
C        write(*,*)RAD1,TEMP4,PROT
C
C       SQUARES SUMS OF M.E.
C
        HV1=HV1+CTMP1*CTMP1*V*V*U*U
        HV2=HV2+CTMP2*CTMP2*V*V*U*U
        HV3=HV3+CTMP3*CTMP3*V*V*U*U
        HV4=HV4+CTMP4*CTMP4*V*V*U*U
	HV5=HV5+CTMP1*CTMP1*V*U
        HV6=HV6+CTMP2*CTMP2*V*U
        HV7=HV7+CTMP3*CTMP3*V*U
        HV8=HV8+CTMP4*CTMP4*V*U
	HV1P=HV1P+CTMP1*CTMP1*CHARG*V*V*U*U
	HV2P=HV2P+CTMP2*CTMP2*CHARG*V*V*U*U
	HV3P=HV3P+CTMP3*CTMP3*CHARG*V*V*U*U
	HV4P=HV4P+CTMP4*CTMP4*CHARG*V*V*U*U
        CPH1(IP,IH)=CTMP1*V*U
c        write(*,*)V,U
        CPH2(IP,IH)=CTMP2*V*U
        CPH3(IP,IH)=CTMP3*V*U
        CPH4(IP,IH)=CTMP4*V*U
40	CONTINUE
30	CONTINUE
C
C       NORMALIZE AND WRITE THE WAVE FUNCTIONS
C
        DO 50 IP=1,NUMP
	DO 60 IH=1,NUMH
	NPH=NPTYPE(IP)-NHTYPE(IH)
	IF(NPH.NE.ISPIN3) GOTO 60
	NPFL=NPFLAG(IP)
	NHFL=NHFLAG(IH)
	NDIF=ABS(NHFL-NPFL)
	IF (NDIF.GT.IDIFH.OR.NDIF.LT.IDIFL) GOTO 60
        NH=FNH(IH)
        NP=FNP(IP)
        LP=FLP(IP)
        LH=FLH(IH)
        J2P=F2JP(IP)
        J2H=F2JH(IH)
	FJP=0.5*J2P
	FJH=0.5*J2H
C
C	CHECK IF MATRIX ELEMENT IS ZERO. IF NON-ZERO THEN CALCULATE
C	THE NORMALIZED COEFFICIENTS. THE NORMALIZATION IS CHOSEN
C	SUCH THAT THE RESULTING NORMAL MODE WILL HAVE ALL THE
C	STRENGTH FOR THE MULTIPOLE OPERATOR TO WHICH IT IS THE 
C	RESPONSE.
C
	LTEMP=LP+LH+NPA1
	IF(TR(FJP,FJH,FLOAT(JTRAN)).LT.0..OR.PAR(LTEMP).LT.0.) GOTO 60
         IF (HV1.GT.0.) THEN
           COEF1=CPH1(IP,IH)*SQRT(HV1)/HV5
c           write(*,*)CPH1(IP,IH),HV1,HV5
         ELSE
           COEF1=0.
         ENDIF
         IF (HV2.GT.0.) THEN
           COEF2=CPH2(IP,IH)*SQRT(HV2)/HV6
         ELSE
           COEF2=0.
         ENDIF
         IF (HV3.GT.0.) THEN
           COEF3=CPH3(IP,IH)*SQRT(HV3)/HV7
         ELSE
           COEF3=0.
         ENDIF
         IF (HV4.GT.0.) THEN
           COEF4=CPH4(IP,IH)*SQRT(HV4)/HV8
         ELSE
           COEF4=0.
         ENDIF
C	
C	WRITE TRANSITION AMPLITUDES TO DEVICES 7-10 IN THE
C	FORMAT REQUIRED BY DW81 (IRCONV=0) OR DWBA91 (IRCONV=1)
C	
        WRITE(6,101) NP,LP,J2P,NPTYPE(IP),NH,LH,J2H,NHTYPE(IH),
     1  COEF1,COEF2,COEF3,COEF4
	IF (IRCONV.EQ.0) THEN
 	WRITE(7,501) ISHELP(IP),ISHELH(IH),COEF1
 	WRITE(8,501) ISHELP(IP),ISHELH(IH),COEF2
 	WRITE(9,501) ISHELP(IP),ISHELH(IH),COEF3
 	WRITE(10,501) ISHELP(IP),ISHELH(IH),COEF4
	ELSE
 	WRITE(7,502) ISHELP(IP),ISHELH(IH)
 	WRITE(8,502) ISHELP(IP),ISHELH(IH)
 	WRITE(9,502) ISHELP(IP),ISHELH(IH)
 	WRITE(10,502) ISHELP(IP),ISHELH(IH)
	FNUL=0.0
 	WRITE(7,503) COEF1,FNUL
 	WRITE(8,503) COEF2,FNUL
 	WRITE(9,503) COEF3,FNUL
 	WRITE(10,503) COEF4,FNUL
	ENDIF
C
C       CALCULATE OVERLAPS OF WAVE FUNCTIONS 1 AND 3  AND OF 2 AND 4
C
	HV11=HV11+COEF1*COEF1
	HV22=HV22+COEF2*COEF2
	HV33=HV33+COEF3*COEF3
	HV44=HV44+COEF4*COEF4
        HV13=HV13+COEF1*COEF3
        HV24=HV24+COEF2*COEF4
	NT = NPTYPE(IP)
	IF (NT.NE.0) THEN
 	HV15 = HV15 + COEF1*COEF1
	HV26 = HV26 + COEF2*COEF2
	HV37 = HV37 + COEF3*COEF3
	HV48 = HV48 + COEF4*COEF4
	ELSE	
	HV15 = HV15 - COEF1*COEF1
	HV26 = HV26 - COEF2*COEF2
	HV37 = HV37 - COEF3*COEF3
	HV48 = HV48 - COEF4*COEF4
	ENDIF
60      CONTINUE
50	CONTINUE
C
C       STRENGTHS IN UNITS FM**2M
C
	LMS1=2*LM1
	LMS2=2*LM2
	LMS3=2*LM3
	LMS4=2*LM4
        IF (LMS1.EQ.0) THEN
          BTJ1=HV1
          BTJ1E=HV1P
        ELSE
          BTJ1=HV1*(BOSC**LMS1)
 	  BTJ1E=HV1P*(BOSC**LMS1)
	ENDIF
        IF (LMS2.EQ.0) THEN
          BTJ2=HV2
          BTJ2E=HV2P
        ELSE
          BTJ2=HV2*(BOSC**LMS2)
	  BTJ2E=HV2P*(BOSC**LMS2)
	ENDIF
        IF (LMS3.EQ.0) THEN
          BTJ3=HV3
          BTJ3E=HV3P
        ELSE
          BTJ3=HV3*(BOSC**LMS3)
	  BTJ3E=HV3P*(BOSC**LMS3)
        ENDIF
        IF (LMS4.EQ.0) THEN
          BTJ4=HV4
	  BTJ4E=HV4P
        ELSE
          BTJ4=HV4*(BOSC**LMS4)
	  BTJ4E=HV4P*(BOSC**LMS4)
        ENDIF
        WRITE(6,110)
        WRITE(6,102) BTJ1,BTJ1E,LMS1
        WRITE(6,103) BTJ2,BTJ2E,LMS2
        WRITE(6,104) BTJ3,BTJ3E,LMS3
        WRITE(6,105) BTJ4,BTJ4E,LMS4
C
C       WRITE OVERLAPS
C
        WRITE(6,110)
	WRITE(6,121) HV11
	WRITE(6,122) HV22
	WRITE(6,123) HV33
	WRITE(6,124) HV44
        WRITE(6,106) HV13
        WRITE(6,107) HV24
        WRITE(6,115) HV15
        WRITE(6,116) HV26
        WRITE(6,117) HV37
        WRITE(6,118) HV48
	WRITE(6,99)
	GOTO 25
99	FORMAT(1X,1H1) 
100     FORMAT(1X,3H M=,I2,7H JTRAN=,I2,8H PARITY=,I2,' ISPIN=',I2,
     1  ' ISPIN3=',I2,7H AMASS=,I3,2X,
     2  'IDIFL=',I2,' and IDIFH=',I2,' hbar w ')
101     FORMAT(1X,8(I6),6(6H      ,F10.4))
102     FORMAT(1X,13H STREN (1) = ,E10.4,6H EL = ,E10.4,5H FM**,I2)
103     FORMAT(1X,13H STREN (2) = ,E10.4,6H EL = ,E10.4,5H FM**,I2)
104     FORMAT(1X,13H STREN (3) = ,E10.4,6H EL = ,E10.4,5H FM**,I2)
105     FORMAT(1X,13H STREN (4) = ,E10.4,6H EL = ,E10.4,5H FM**,I2)
121     FORMAT(1X,17H OVERLAP <1!1> = ,E10.4)
122     FORMAT(1X,17H OVERLAP <2!2> = ,E10.4)
123     FORMAT(1X,17H OVERLAP <3!3> = ,E10.4)
124     FORMAT(1X,17H OVERLAP <4!4> = ,E10.4)
106     FORMAT(1X,17H OVERLAP <1!3> = ,E10.4)
107     FORMAT(1X,17H OVERLAP <2!4> = ,E10.4)
115	FORMAT(1X,17H <T=0!T=1> <1! = ,E10.4)
116	FORMAT(1X,17H <T=0!T=1> <2! = ,E10.4)
117	FORMAT(1X,17H <T=0!T=1> <3! = ,E10.4)
118	FORMAT(1X,17H <T=0!T=1> <4! = ,E10.4)
110     FORMAT(1X)
111     FORMAT(4X,4H  NP,6H    LP,6H   2JP,6H  TYPE,6H   NH,6H    LH,
     16H   2JH,6H  TYPE,8X,7H S=0 L=,I2,7X,7H S=1 L=,I2,7X,7H S=1 L=,
     1I2,7X,7H S=1 L=,I2)
501     FORMAT(I5,I5,F10.5)
502	FORMAT(2I5)
503	FORMAT(F7.5,3X,F5.3)
301	STOP
      END
