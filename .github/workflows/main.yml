# This is a basic workflow to help you get started with Actions
name: CI-CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially
jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # repos: [ r3broot, sofia, frs, asyeos, glad-tpc ]
        repos: [ r3broot, glad-tpc, sofia-frs-asy ]
        include:
          - repos: r3broot
            cache: r3broot
          - repos: glad-tpc
            url: https://github.com/R3BRootGroup/glad-tpc.git
            cache: r3broot
          - repos: sofia-frs-asy
            url: >-
              https://github.com/R3BRootGroup/sofia.git
              https://github.com/R3BRootGroup/frs.git
              https://github.com/R3BRootGroup/asyeos.git
            cache: other-repos

    container: 
      image: yanzhaowang/cvmfs_clang:v15
      volumes:
        - /tmp:/cvmfs
      env:
        CVMDIR: /cvmfs/fairsoft.gsi.de
        NUM_THREADS: 2
      options: --user root --privileged  --ulimit nofile=10000:10000 --cap-add SYS_ADMIN --device /dev/fuse
    steps:
      - uses: actions/checkout@v3
        with:
         fetch-depth: 0

      - name: pre-build
        uses: './.github/actions/pre-build'

      - name: caching
        id: caching
        uses: './.github/actions/cache-steps'
        with: 
          r3b-dev-SHA: ${{ env.cacheSHA }}
          # repo: ${{ matrix.repos }}
          repo: ${{ matrix.cache }}

      - name: build r3broot
        uses: './.github/actions/r3bbuild-steps'
        with:
          ucesb-cache-existed: ${{ steps.caching.outputs.ucesb-hit }}

      - name: ctest
        # run: source $GITHUB_WORKSPACE/Dart.sh Experimental $GITHUB_WORKSPACE/.githubfiles/dart_github_CICD.cfg
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          source $GITHUB_WORKSPACE/util/generate_geo_test.sh
          ctest --test-dir ${BUILDDIR} --output-on-failure --rerun-failed -j${NUM_THREADS} -E "(run_gen_sim|run_digi|run_aladin_digi|califasim2|landreco|elsim)"
        shell: bash

      - name: ccache stats
        if: ${{ github.event_name == 'pull_request' }}
        run: ccache --show-stats
