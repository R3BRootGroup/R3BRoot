// -----            Definition file for the crystals in R3BCal           -----
// -----               Created 08/04/10  by Staffan Wranne               -----
// -----        new Version: 08/04/10 <wranne@student.chalmers.se>       -----
//
// The last six numbers are the crystal numbers of the adjesent crystals and is NOT used by R3BCal
// Angles in degrees
// Syntax: XB_CRYSTAL( <CrystalNumber>, <CrystalType>, <theta>, <phi>, <psi>, *, *, *, *, *, *)
//
XB_CRYSTAL(1, XB_TYPE_D, 90.000, 180.000, -90.000, 1, 2, 3, 4, 5, 6)                 // D    0.000
XB_CRYSTAL(2, XB_TYPE_B, 90.000, -163.743, 0.000, 0, 2, 6, 7, 8, 9)                  // B    0.051
XB_CRYSTAL(3, XB_TYPE_C, 73.928, -171.645, -32.656, 0, 1, 3, 9, 10, 11)              // C    0.107
XB_CRYSTAL(4, XB_TYPE_C, 73.928, 171.645, 212.656, 0, 2, 4, 11, 12, 13)              // C    0.107
XB_CRYSTAL(5, XB_TYPE_B, 90.000, 163.743, 180.000, 0, 3, 5, 13, 14, 15)              // B    0.051
XB_CRYSTAL(6, XB_TYPE_C, 106.072, 171.645, 147.344, 0, 4, 6, 15, 16, 17)             // C    0.107
XB_CRYSTAL(7, XB_TYPE_C, 106.072, -171.645, 32.656, 0, 1, 5, 7, 17, 18)              // C    0.107
XB_CRYSTAL(8, XB_TYPE_B, 104.686, -153.168, 71.370, 1, 6, 8, 18, 19, 20)             // B    0.019
XB_CRYSTAL(9, XB_TYPE_A, 90.000, -148.283, 0.000, 1, 7, 9, 20, 21, 162)              // A    0.003
XB_CRYSTAL(10, XB_TYPE_B, 75.314, -153.168, -71.370, 1, 2, 8, 10, 21, 22)            // B    0.019
XB_CRYSTAL(11, XB_TYPE_D, 60.000, -159.095, 20.905, 9, 2, 11, 24, 23, 22)            // D    0.017
XB_CRYSTAL(12, XB_TYPE_C, 59.817, 180.000, 90.000, 2, 3, 12, 25, 24, 10)             // C    0.064
XB_CRYSTAL(13, XB_TYPE_D, 60.000, 159.095, -20.905, 3, 13, 27, 26, 25, 11)           // D    0.017
XB_CRYSTAL(14, XB_TYPE_B, 75.314, 153.168, 251.370, 3, 4, 14, 28, 27, 12)            // B    0.019
XB_CRYSTAL(15, XB_TYPE_A, 90.000, 148.283, 180.000, 4, 15, 29, 28, 13, 162)          // A    0.003
XB_CRYSTAL(16, XB_TYPE_B, 104.686, 153.168, 108.630, 4, 5, 16, 30, 29, 14)           // B    0.019
XB_CRYSTAL(17, XB_TYPE_D, 120.000, 159.095, -159.095, 5, 17, 32, 31, 30, 15)         // D    0.017
XB_CRYSTAL(18, XB_TYPE_C, 120.183, 180.000, 270.000, 5, 6, 18, 33, 32, 16)           // C    0.064
XB_CRYSTAL(19, XB_TYPE_D, 120.000, -159.095, 159.095, 6, 7, 19, 34, 33, 17)          // D    0.017
XB_CRYSTAL(20, XB_TYPE_C, 116.612, -138.914, 110.220, 7, 20, 36, 35, 34, 18)         // C    0.022
XB_CRYSTAL(21, XB_TYPE_B, 99.014, -135.670, 144.998, 7, 8, 21, 37, 36, 19)           // B    0.013
XB_CRYSTAL(22, XB_TYPE_B, 80.986, -135.670, 215.002, 8, 9, 22, 38, 37, 20)           // B    0.013
XB_CRYSTAL(23, XB_TYPE_C, 63.388, -138.914, 249.780, 9, 10, 23, 39, 38, 21)          // C    0.014
XB_CRYSTAL(24, XB_TYPE_C, 47.634, -142.679, 132.588, 10, 24, 40, 58, 39, 22)         // C    0.018
XB_CRYSTAL(25, XB_TYPE_B, 45.050, -167.209, 115.890, 10, 11, 25, 41, 40, 23)         // B    0.024
XB_CRYSTAL(26, XB_TYPE_B, 45.050, 167.209, 64.110, 11, 12, 26, 42, 41, 24)           // B    0.024
XB_CRYSTAL(27, XB_TYPE_C, 47.634, 142.679, 47.412, 12, 27, 43, 62, 42, 25)           // C    0.018
XB_CRYSTAL(28, XB_TYPE_C, 63.388, 138.914, -69.780, 12, 13, 28, 44, 43, 26)          // C    0.014
XB_CRYSTAL(29, XB_TYPE_B, 80.986, 135.670, -35.002, 13, 14, 29, 45, 44, 27)          // B    0.013
XB_CRYSTAL(30, XB_TYPE_B, 99.014, 135.670, 35.002, 14, 15, 30, 46, 45, 28)           // B    0.013
XB_CRYSTAL(31, XB_TYPE_C, 116.612, 138.914, 69.780, 15, 16, 31, 47, 46, 29)          // C    0.022
XB_CRYSTAL(32, XB_TYPE_C, 132.366, 142.679, -47.412, 16, 32, 48, 69, 47, 30)         // C    0.018
XB_CRYSTAL(33, XB_TYPE_B, 134.950, 167.209, -64.110, 16, 17, 33, 49, 48, 31)         // B    0.024
XB_CRYSTAL(34, XB_TYPE_B, 134.950, -167.209, 244.110, 17, 18, 34, 50, 49, 32)        // B    0.024
XB_CRYSTAL(35, XB_TYPE_C, 132.366, -142.679, 227.412, 18, 19, 35, 51, 50, 33)        // C    0.018
XB_CRYSTAL(36, XB_TYPE_C, 125.985, -123.613, -1.114, 19, 36, 53, 52, 51, 34)         // C    0.020
XB_CRYSTAL(37, XB_TYPE_D, 108.000, -121.717, 58.283, 19, 20, 37, 54, 53, 35)         // D    0.001
XB_CRYSTAL(38, XB_TYPE_C, 90.000, -120.183, 180.000, 20, 21, 38, 55, 54, 36)         // C    0.013
XB_CRYSTAL(39, XB_TYPE_D, 72.000, -121.717, 121.717, 21, 22, 39, 56, 55, 37)         // D    0.001
XB_CRYSTAL(40, XB_TYPE_C, 54.015, -123.613, 1.114, 22, 23, 58, 57, 56, 38)           // C    0.022
XB_CRYSTAL(41, XB_TYPE_B, 30.325, -149.860, 172.011, 23, 24, 41, 60, 59, 58)         // B    0.018
XB_CRYSTAL(42, XB_TYPE_A, 31.717, 180.000, -90.000, 24, 25, 42, 60, 40, 162)         // A    0.003
XB_CRYSTAL(43, XB_TYPE_B, 30.325, 149.860, 7.989, 25, 26, 62, 61, 60, 41)            // B    0.018
XB_CRYSTAL(44, XB_TYPE_C, 54.015, 123.613, 178.886, 26, 27, 44, 64, 63, 62)          // C    0.022
XB_CRYSTAL(45, XB_TYPE_D, 72.000, 121.717, -121.717, 27, 28, 45, 65, 64, 43)         // D    0.001
XB_CRYSTAL(46, XB_TYPE_C, 90.000, 120.183, 0.000, 28, 29, 46, 66, 65, 44)            // C    0.013
XB_CRYSTAL(47, XB_TYPE_D, 108.000, 121.717, -58.283, 29, 30, 47, 67, 66, 45)         // D    0.001
XB_CRYSTAL(48, XB_TYPE_C, 125.985, 123.613, 181.114, 30, 31, 69, 68, 67, 46)         // C    0.022
XB_CRYSTAL(49, XB_TYPE_B, 149.675, 149.860, -7.989, 31, 32, 49, 71, 70, 69)          // B    0.018
XB_CRYSTAL(50, XB_TYPE_A, 148.283, 180.000, 90.000, 32, 33, 50, 71, 48, 162)         // A    0.003
XB_CRYSTAL(51, XB_TYPE_B, 149.675, -149.860, 187.989, 33, 34, 51, 72, 71, 49)        // B    0.018
XB_CRYSTAL(52, XB_TYPE_D, 144.000, -121.717, -58.283, 34, 35, 52, 73, 72, 50)        // D    0.004
XB_CRYSTAL(53, XB_TYPE_B, 133.643, -102.504, 46.296, 35, 53, 74, 98, 73, 51)         // B    0.021
XB_CRYSTAL(54, XB_TYPE_B, 115.890, -106.368, -25.938, 35, 36, 54, 75, 74, 52)        // B    0.016
XB_CRYSTAL(55, XB_TYPE_C, 98.026, -106.235, -59.672, 36, 37, 55, 76, 75, 53)         // C    0.114
XB_CRYSTAL(56, XB_TYPE_C, 81.974, -106.235, 59.672, 37, 38, 56, 77, 76, 54)          // C    0.114
XB_CRYSTAL(57, XB_TYPE_B, 64.110, -106.368, 25.938, 38, 39, 57, 78, 77, 55)          // B    0.016
XB_CRYSTAL(58, XB_TYPE_B, 46.357, -102.504, -46.296, 39, 58, 79, 93, 78, 56)         // B    0.021
XB_CRYSTAL(59, XB_TYPE_D, 36.000, -121.717, -121.717, 39, 23, 40, 59, 79, 57)        // D    0.004
XB_CRYSTAL(60, XB_TYPE_C, 18.063, -116.764, 175.290, 40, 60, 80, 91, 79, 58)         // C    0.114
XB_CRYSTAL(61, XB_TYPE_B, 16.257, 180.000, -90.000, 40, 41, 42, 61, 80, 59)          // B    0.012
XB_CRYSTAL(62, XB_TYPE_C, 18.063, 116.764, 4.710, 42, 62, 88, 89, 80, 60)            // C    0.114
XB_CRYSTAL(63, XB_TYPE_D, 36.000, 121.717, 121.717, 42, 26, 43, 63, 88, 61)          // D    0.004
XB_CRYSTAL(64, XB_TYPE_B, 46.357, 102.504, 226.296, 43, 64, 87, 109, 88, 62)         // B    0.021
XB_CRYSTAL(65, XB_TYPE_B, 64.110, 106.368, 154.062, 43, 44, 65, 86, 87, 63)          // B    0.016
XB_CRYSTAL(66, XB_TYPE_C, 81.974, 106.235, 120.328, 44, 45, 66, 85, 86, 64)          // C    0.114
XB_CRYSTAL(67, XB_TYPE_C, 98.026, 106.235, 239.672, 45, 46, 67, 84, 85, 65)          // C    0.114
XB_CRYSTAL(68, XB_TYPE_B, 115.890, 106.368, 205.938, 46, 47, 68, 83, 84, 66)         // B    0.016
XB_CRYSTAL(69, XB_TYPE_B, 133.643, 102.504, 133.704, 47, 69, 82, 104, 83, 67)        // B    0.021
XB_CRYSTAL(70, XB_TYPE_D, 144.000, 121.717, 58.283, 47, 31, 48, 70, 82, 68)          // D    0.004
XB_CRYSTAL(71, XB_TYPE_C, 161.937, 116.764, -4.710, 48, 71, 81, 102, 82, 69)         // C    0.114
XB_CRYSTAL(72, XB_TYPE_B, 163.743, 180.000, 90.000, 48, 49, 50, 72, 81, 70)          // B    0.012
XB_CRYSTAL(73, XB_TYPE_C, 161.937, -116.764, 184.710, 50, 51, 73, 100, 81, 71)       // C    0.114
XB_CRYSTAL(74, XB_TYPE_C, 149.817, -90.000, 90.000, 51, 52, 98, 99, 100, 72)         // C    0.013
XB_CRYSTAL(75, XB_TYPE_A, 121.717, -90.000, -90.000, 52, 53, 75, 97, 98, 162)        // A    0.003
XB_CRYSTAL(76, XB_TYPE_B, 106.257, -90.000, -90.000, 53, 54, 76, 96, 97, 74)         // B    0.051
XB_CRYSTAL(77, XB_TYPE_D, 90.000, -90.000, 180.000, 54, 55, 77, 95, 96, 75)          // D    0.000
XB_CRYSTAL(78, XB_TYPE_B, 73.743, -90.000, 90.000, 55, 56, 78, 94, 95, 76)           // B    0.051
XB_CRYSTAL(79, XB_TYPE_A, 58.283, -90.000, 90.000, 56, 57, 93, 94, 77, 162)          // A    0.003
XB_CRYSTAL(80, XB_TYPE_C, 30.183, -90.000, 270.000, 57, 58, 59, 91, 92, 93)          // C    0.013
XB_CRYSTAL(81, XB_TYPE_D, 0.000, 0.000, 0.000, 59, 60, 61, 89, 90, 91)               // D    0.000
XB_CRYSTAL(82, XB_TYPE_D, 180.000, 0.000, 180.000, 70, 71, 72, 100, 101, 102)        // D    0.000
XB_CRYSTAL(83, XB_TYPE_C, 149.817, 90.000, 90.000, 68, 69, 70, 102, 103, 104)        // C    0.013
XB_CRYSTAL(84, XB_TYPE_A, 121.717, 90.000, 270.000, 67, 68, 104, 105, 84, 162)       // A    0.003
XB_CRYSTAL(85, XB_TYPE_B, 106.257, 90.000, 270.000, 66, 67, 83, 105, 106, 85)        // B    0.051
XB_CRYSTAL(86, XB_TYPE_D, 90.000, 90.000, -180.000, 65, 66, 84, 106, 107, 86)        // D    0.000
XB_CRYSTAL(87, XB_TYPE_B, 73.743, 90.000, 90.000, 64, 65, 85, 107, 108, 87)          // B    0.051
XB_CRYSTAL(88, XB_TYPE_A, 58.283, 90.000, 90.000, 63, 64, 86, 108, 109, 162)         // A    0.003
XB_CRYSTAL(89, XB_TYPE_C, 30.183, 90.000, -90.000, 61, 62, 63, 109, 110, 89)         // C    0.013
XB_CRYSTAL(90, XB_TYPE_C, 18.063, 63.236, 175.290, 80, 61, 88, 110, 111, 90)         // C    0.114
XB_CRYSTAL(91, XB_TYPE_B, 16.257, 0.000, 270.000, 91, 80, 89, 111, 112, 113)         // B    0.012
XB_CRYSTAL(92, XB_TYPE_C, 18.063, -63.236, 4.710, 79, 59, 80, 90, 113, 92)           // C    0.114
XB_CRYSTAL(93, XB_TYPE_D, 36.000, -58.283, 121.717, 93, 79, 91, 113, 130, 114)       // D    0.004
XB_CRYSTAL(94, XB_TYPE_B, 46.357, -77.496, 226.296, 94, 78, 57, 79, 92, 114)         // B    0.021
XB_CRYSTAL(95, XB_TYPE_B, 64.110, -73.632, 154.062, 95, 77, 78, 93, 114, 115)        // B    0.016
XB_CRYSTAL(96, XB_TYPE_C, 81.974, -73.765, 120.328, 96, 76, 77, 94, 115, 116)        // C    0.114
XB_CRYSTAL(97, XB_TYPE_C, 98.026, -73.765, 239.672, 97, 75, 76, 95, 116, 117)        // C    0.114
XB_CRYSTAL(98, XB_TYPE_B, 115.890, -73.632, 205.938, 98, 74, 75, 96, 117, 118)       // B    0.016
XB_CRYSTAL(99, XB_TYPE_B, 133.643, -77.496, 133.704, 99, 73, 52, 74, 97, 118)        // B    0.021
XB_CRYSTAL(100, XB_TYPE_D, 144.000, -58.283, 58.283, 100, 73, 98, 118, 135, 119)     // D    0.004
XB_CRYSTAL(101, XB_TYPE_C, 161.937, -63.236, -4.710, 101, 81, 72, 73, 99, 119)       // C    0.114
XB_CRYSTAL(102, XB_TYPE_B, 163.743, 0.000, 90.000, 102, 81, 100, 119, 120, 121)      // B    0.012
XB_CRYSTAL(103, XB_TYPE_C, 161.937, 63.236, 184.710, 103, 82, 70, 81, 101, 121)      // C    0.114
XB_CRYSTAL(104, XB_TYPE_D, 144.000, 58.283, -58.283, 104, 82, 102, 121, 138, 122)    // D    0.004
XB_CRYSTAL(105, XB_TYPE_B, 133.643, 77.496, 46.296, 105, 83, 68, 82, 103, 122)       // B    0.021
XB_CRYSTAL(106, XB_TYPE_B, 115.890, 73.632, -25.938, 106, 84, 83, 104, 122, 123)     // B    0.016
XB_CRYSTAL(107, XB_TYPE_C, 98.026, 73.765, -59.672, 107, 85, 84, 105, 123, 124)      // C    0.114
XB_CRYSTAL(108, XB_TYPE_C, 81.974, 73.765, 59.672, 108, 86, 85, 106, 124, 125)       // C    0.114
XB_CRYSTAL(109, XB_TYPE_B, 64.110, 73.632, 25.938, 109, 87, 86, 107, 125, 126)       // B    0.016
XB_CRYSTAL(110, XB_TYPE_B, 46.357, 77.496, -46.296, 110, 88, 63, 87, 108, 126)       // B    0.021
XB_CRYSTAL(111, XB_TYPE_D, 36.000, 58.283, -121.717, 111, 89, 88, 109, 126, 127)     // D    0.004
XB_CRYSTAL(112, XB_TYPE_B, 30.325, 30.140, 172.011, 112, 90, 89, 110, 127, 128)      // B    0.018
XB_CRYSTAL(113, XB_TYPE_A, 31.717, 0.000, 270.000, 113, 90, 111, 128, 129, 162)      // A    0.003
XB_CRYSTAL(114, XB_TYPE_B, 30.325, -30.140, 7.989, 92, 91, 90, 112, 129, 130)        // B    0.018
XB_CRYSTAL(115, XB_TYPE_C, 54.015, -56.387, 178.886, 115, 94, 93, 92, 130, 131)      // C    0.022
XB_CRYSTAL(116, XB_TYPE_D, 72.000, -58.283, -121.717, 116, 95, 94, 114, 131, 132)    // D    0.001
XB_CRYSTAL(117, XB_TYPE_C, 90.000, -59.817, 0.000, 117, 96, 95, 115, 132, 133)       // C    0.013
XB_CRYSTAL(118, XB_TYPE_D, 108.000, -58.283, -58.283, 118, 97, 96, 116, 133, 134)    // D    0.001
XB_CRYSTAL(119, XB_TYPE_C, 125.985, -56.387, 181.114, 99, 98, 97, 117, 134, 135)     // C    0.022
XB_CRYSTAL(120, XB_TYPE_B, 149.675, -30.140, -7.989, 120, 101, 100, 99, 135, 136)    // B    0.018
XB_CRYSTAL(121, XB_TYPE_A, 148.283, 0.000, 90.000, 121, 101, 119, 136, 137, 162)     // A    0.003
XB_CRYSTAL(122, XB_TYPE_B, 149.675, 30.140, 187.989, 103, 102, 101, 120, 137, 138)   // B    0.018
XB_CRYSTAL(123, XB_TYPE_C, 125.985, 56.387, -1.114, 123, 105, 104, 103, 138, 139)    // C    0.022
XB_CRYSTAL(124, XB_TYPE_D, 108.000, 58.283, 58.283, 124, 106, 105, 122, 139, 140)    // D    0.001
XB_CRYSTAL(125, XB_TYPE_C, 90.000, 59.817, 180.000, 125, 107, 106, 123, 140, 141)    // C    0.013
XB_CRYSTAL(126, XB_TYPE_D, 72.000, 58.283, 121.717, 126, 108, 107, 124, 141, 142)    // D    0.001
XB_CRYSTAL(127, XB_TYPE_C, 54.015, 56.387, 1.114, 127, 110, 109, 108, 125, 142)      // C    0.034
XB_CRYSTAL(128, XB_TYPE_C, 47.634, 37.321, 132.588, 128, 111, 110, 126, 142, 143)    // C    0.018
XB_CRYSTAL(129, XB_TYPE_B, 45.050, 12.791, 115.890, 129, 112, 111, 127, 143, 144)    // B    0.024
XB_CRYSTAL(130, XB_TYPE_B, 45.050, -12.791, 64.110, 130, 113, 112, 128, 144, 145)    // B    0.024
XB_CRYSTAL(131, XB_TYPE_C, 47.634, -37.321, 47.412, 131, 114, 92, 113, 129, 145)     // C    0.018
XB_CRYSTAL(132, XB_TYPE_C, 63.388, -41.086, -69.780, 132, 115, 114, 130, 145, 146)   // C    0.022
XB_CRYSTAL(133, XB_TYPE_B, 80.986, -44.330, -35.002, 133, 116, 115, 131, 146, 147)   // B    0.013
XB_CRYSTAL(134, XB_TYPE_B, 99.014, -44.330, 35.002, 134, 117, 116, 132, 147, 148)    // B    0.013
XB_CRYSTAL(135, XB_TYPE_C, 116.612, -41.086, 69.780, 135, 118, 117, 133, 148, 149)   // C    0.014
XB_CRYSTAL(136, XB_TYPE_C, 132.366, -37.321, -47.412, 136, 119, 99, 118, 134, 149)   // C    0.018
XB_CRYSTAL(137, XB_TYPE_B, 134.950, -12.791, -64.110, 137, 120, 119, 135, 149, 150)  // B    0.024
XB_CRYSTAL(138, XB_TYPE_B, 134.950, 12.791, 244.110, 138, 121, 120, 136, 150, 151)   // B    0.024
XB_CRYSTAL(139, XB_TYPE_C, 132.366, 37.321, 227.412, 139, 122, 103, 121, 137, 151)   // C    0.018
XB_CRYSTAL(140, XB_TYPE_C, 116.612, 41.086, 110.220, 140, 123, 122, 138, 151, 152)   // C    0.014
XB_CRYSTAL(141, XB_TYPE_B, 99.014, 44.330, 144.998, 141, 124, 123, 139, 152, 153)    // B    0.013
XB_CRYSTAL(142, XB_TYPE_B, 80.986, 44.330, 215.002, 142, 125, 124, 140, 153, 154)    // B    0.013
XB_CRYSTAL(143, XB_TYPE_C, 63.388, 41.086, 249.780, 143, 127, 126, 125, 141, 154)    // C    0.022
XB_CRYSTAL(144, XB_TYPE_D, 60.000, 20.905, 20.905, 144, 128, 127, 142, 154, 155)     // D    0.017
XB_CRYSTAL(145, XB_TYPE_C, 59.817, 0.000, 90.000, 145, 129, 128, 143, 155, 156)      // C    0.064
XB_CRYSTAL(146, XB_TYPE_D, 60.000, -20.905, -20.905, 146, 131, 130, 129, 144, 156)   // D    0.017
XB_CRYSTAL(147, XB_TYPE_B, 75.314, -26.832, 251.370, 147, 132, 131, 145, 156, 157)   // B    0.019
XB_CRYSTAL(148, XB_TYPE_A, 90.000, -31.717, 180.000, 148, 133, 132, 146, 157, 162)   // A    0.003
XB_CRYSTAL(149, XB_TYPE_B, 104.686, -26.832, 108.630, 149, 134, 133, 147, 157, 158)  // B    0.019
XB_CRYSTAL(150, XB_TYPE_D, 120.000, -20.905, -159.095, 150, 136, 135, 134, 148, 158) // D    0.017
XB_CRYSTAL(151, XB_TYPE_C, 120.183, 0.000, 270.000, 151, 137, 136, 149, 158, 159)    // C    0.064
XB_CRYSTAL(152, XB_TYPE_D, 120.000, 20.905, 159.095, 152, 139, 138, 137, 150, 159)   // D    0.017
XB_CRYSTAL(153, XB_TYPE_B, 104.686, 26.832, 71.370, 153, 140, 139, 151, 159, 160)    // B    0.019
XB_CRYSTAL(154, XB_TYPE_A, 90.000, 31.717, 0.000, 154, 141, 140, 152, 160, 162)      // A    0.003
XB_CRYSTAL(155, XB_TYPE_B, 75.314, 26.832, -71.370, 155, 143, 142, 141, 153, 160)    // B    0.019
XB_CRYSTAL(156, XB_TYPE_C, 73.928, 8.355, -32.656, 156, 144, 143, 154, 160, 161)     // C    0.107
XB_CRYSTAL(157, XB_TYPE_C, 73.928, -8.355, 212.656, 157, 146, 145, 144, 155, 161)    // C    0.107
XB_CRYSTAL(158, XB_TYPE_B, 90.000, -16.257, 180.000, 158, 148, 147, 146, 156, 161)   // B    0.051
XB_CRYSTAL(159, XB_TYPE_C, 106.072, -8.355, 147.344, 159, 150, 149, 148, 157, 161)   // C    0.107
XB_CRYSTAL(160, XB_TYPE_C, 106.072, 8.355, 32.656, 160, 152, 151, 150, 158, 161)     // C    0.107
XB_CRYSTAL(161, XB_TYPE_B, 90.000, 16.257, 0.000, 161, 155, 154, 153, 152, 159)      // B    0.051
XB_CRYSTAL(162, XB_TYPE_D, 90.000, 0.000, 90.000, 155, 156, 157, 158, 159, 160)      // D    0.000
